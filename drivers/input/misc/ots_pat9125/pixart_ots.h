/* drivers/input/misc/ots_pat9125/pixart_ots.h
 *
 * Copyright (c) 2016 ~ 2022, The Linux Foundation. All rights reserved.
 *
 */

#ifndef __PIXART_OTS_H_
#define __PIXART_OTS_H_

//#define AXIS_Y_ENABLE
//#define PRESS_KEY_ENABLE
#define DYNAMIC_RESOLUTION
//#define REGULATOR_VDD
#define REGULATOR_VLD

#ifdef CONFIG_INPUT_PIXART_OTS_PAT9125_SWITCH_DEBUG
#define REGISTER_RW_TEST
#endif

#define PAT9125_DEV_NAME "pixart_pat9125"
#define MAX_BUF_SIZE 20
#define RESET_DELAY_US 15000
#define RESET_RETRY_CNT_MAX 2
#define PINCTRL_STATE_ACTIVE "pmx_rot_switch_active"
#define PINCTRL_STATE_SUSPEND "pmx_rot_switch_suspend"
#define PINCTRL_STATE_RELEASE "pmx_rot_switch_release"
#define VDD_VTG_MIN_UV 1800000
#define VDD_VTG_MAX_UV 1800000
#define VDD_ACTIVE_LOAD_UA 10000
#define VLD_VTG_MIN_UV 2800000
#define VLD_VTG_MAX_UV 3300000
#define VLD_ACTIVE_LOAD_UA 10000
#define DELAY_BETWEEN_REG_US 25000

/* Register addresses */
#define PIXART_PAT9125_PRODUCT_ID1_REG 0x00
#define PIXART_PAT9125_PRODUCT_ID2_REG 0x01
#define PIXART_PAT9125_MOTION_STATUS_REG 0x02
#define PIXART_PAT9125_DELTA_X_LO_REG 0x03
#define PIXART_PAT9125_DELTA_Y_LO_REG 0x04
#define PIXART_PAT9125_OP_MODE_REG 0x05
#define PIXART_PAT9125_CONFIG_REG 0x06
#define PIXART_PAT9125_WRITE_PROTECT_REG 0x09
#define PIXART_PAT9125_SET_CPI_RES_X_REG 0x0D
#define PIXART_PAT9125_SET_CPI_RES_Y_REG 0x0E
#define PIXART_PAT9125_DELTA_XY_HI_REG 0x12
#define PIXART_PAT9125_ORIENTATION_REG 0x19
#define PIXART_PAT9125_2B_REG 0x2B
#define PIXART_PAT9125_2D_REG 0x2D
#define PIXART_PAT9125_VOLTAGE_SEGMENT_SEL_REG 0x4B
#define PIXART_PAT9125_7C_REG 0x7C
#define PIXART_PAT9125_SELECT_BANK_REG 0x7F
#define PIXART_PAT9125_MISC1_REG 0x5D
#define PIXART_PAT9125_MISC2_REG 0x5E
/*Register configuration data */
#define PIXART_PAT9125_SENSOR_ID 0x31
#define PIXART_PAT9125_SLEEP1_SLEEP2_DIS 0xA0 //bit 4.5 set 0
#define PIXART_PAT9125_SLEEP1_SLEEP2_EN 0xB8  //bit 4.5 set 1
#define PIXART_PAT9125_FORCE_SLEEP2 0xBC      //bit 3.5 set 1
#define PIXART_PAT9125_CONFIG_DEFAULT 0x17
#define PIXART_PAT9125_RESET 0x97
#define PIXART_PAT9125_POWERDOWN_EN 0x1F
#define PIXART_PAT9125_POWERDOWN_DIS 0x17
#define PIXART_PAT9125_MOTION_DATA_LENGTH 0x04
#define PIXART_PAT9125_BANK0 0x00
#define PIXART_PAT9125_DISABLE_WRITE_PROTECT 0x5A
#define PIXART_PAT9125_ENABLE_WRITE_PROTECT 0x00
#define PIXART_PAT9125_CPI_RESOLUTION_X 0xB9
#define PIXART_PAT9125_CPI_RESOLUTION_X_STATIC 0x1E //Fix Press Down Debounce
#ifdef AXIS_Y_ENABLE
#define PIXART_PAT9125_CPI_RESOLUTION_Y 0x80
#else
#define PIXART_PAT9125_CPI_RESOLUTION_Y 0x00
#endif /*AXIS_Y_ENABLE*/

#define PIXART_PAT9125_LOW_VOLTAGE_SEGMENT 0x04
#define PIXART_PAT9125_VALID_MOTION_DATA 0x80

#define PIXART_PAT9125_2B_INIT_VALUE 0x6d
#define PIXART_PAT9125_2D_INIT_VALUE 0x00
#define PIXART_PAT9125_7C_INIT_VALUE 0x82

#define PIXART_SAMPLING_PERIOD_US_MIN 14000
#define PIXART_SAMPLING_PERIOD_US_MAX 14500  //about 60Hz
#ifdef DYNAMIC_RESOLUTION
#define PIXART_SAMPLING_AUTO_REDUCTION_TIMEOUT_US  1000000
#define PIXART_SAMPLING_AUTO_REDUCTION_CNT \
    ((PIXART_SAMPLING_AUTO_REDUCTION_TIMEOUT_US + PIXART_SAMPLING_PERIOD_US_MAX) \
    / PIXART_SAMPLING_PERIOD_US_MIN)
#endif

/* Export functions */
bool ots_sensor_init(struct i2c_client *);

unsigned char get_cpi_resolution_x(void);

void set_cpi_resolution_x(unsigned char new);

#endif
